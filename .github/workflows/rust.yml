name: Rust

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:
    inputs:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: cache cargo artifact
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo-build
        with:
          path: |
            target
            ~/.cargo/registry
            roms
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.55.0
            override: true
            components: rustfmt, clippy

      - name: install linux requirements
        run: sudo sh -c "apt-get update && apt-get install -y cmake libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev"

      - uses: actions/checkout@v2

      - name: install asset requirement
        run: make bios

      - name: Check code format
        run: cargo fmt --verbose -- --check

      - name: Lint code base
        run: cargo clippy --workspace --verbose -- -D warnings

      - name: Build
        run: cargo build --verbose --workspace

      - name: Run tests
        run: cargo test --verbose --workspace
